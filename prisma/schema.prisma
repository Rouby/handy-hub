generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["linux-arm64-openssl-1.1.x", "debian-openssl-1.1.x", "native"]
  output        = "../.yarn/unplugged/@prisma-client-virtual-824b2c72d1/node_modules/.prisma/client"
}

datasource db {
  provider     = "sqlite"
  // provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?

  name           String
  firstDayOfWeek Int    @default(1) // 0 = Sunday, 1 = Monday

  projects Project[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Project {
  id String @id @default(cuid())

  name         String
  description  String
  location     String
  plannedStart DateTime?
  startedAt    DateTime?
  dueAt        DateTime?
  finishedAt   DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique

  blueprints Blueprint[]
}

model Blueprint {
  id String @id @default(cuid())

  name String

  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  projectId String

  objects BlueprintObject[]

  @@index([projectId])
}

model BlueprintObject {
  id String @id @default(cuid())

  name   String
  type   String
  params String // JSON

  blueprint   Blueprint @relation(fields: [blueprintId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  blueprintId String

  @@index([blueprintId])
}
